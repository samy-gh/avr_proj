
#ifndef __IR_RECV_H__
#define __IR_RECV_H__

// samylib
#include <my_typedef.h>


// E_IR_RECV_STAT
typedef enum {
	E_IR_RECV_STAT_IDLE = 0,				// 0
	E_IR_RECV_STAT_LEADER1_WAIT,
	E_IR_RECV_STAT_LEADER1_MEASURE,
	E_IR_RECV_STAT_LEADER0_NEC_MEASURE,
	E_IR_RECV_STAT_LEADER0_AEHA_MEASURE,
	E_IR_RECV_STAT_SONY_FRAME_WAIT,			// 5
	E_IR_RECV_STAT_SONY_FRAME_MEASURE,
	E_IR_RECV_STAT_NEC_FRAME_WAIT,
	E_IR_RECV_STAT_NEC_FRAME_MEASURE,
	E_IR_RECV_STAT_AEHA_FRAME_WAIT,
	E_IR_RECV_STAT_AEHA_FRAME_MEASURE,		// 10
	E_IR_RECV_STAT_END,
	E_IR_RECV_STAT_ERR,
	E_IR_RECV_STAT_MAX
} E_IR_RECV_STAT;

// E_IR_RECV_ERR
typedef enum {
	E_IR_RECV_ERR_NONE = 0,						// 0
	E_IR_RECV_ERR_LEADER1_WAIT,
	E_IR_RECV_ERR_LEADER1_MEASURE,
	E_IR_RECV_ERR_LEADER1_MEASURE_TO,
	E_IR_RECV_ERR_LEADER0_NEC_MEASURE,
	E_IR_RECV_ERR_LEADER0_NEC_MEASURE_TO,		// 5
	E_IR_RECV_ERR_LEADER0_AEHA_MEASURE,
	E_IR_RECV_ERR_LEADER0_AEHA_MEASURE_TO,
	E_IR_RECV_ERR_UNKNOWN_LEADER,
	E_IR_RECV_ERR_FRAME_DATA_1_NULL,
	E_IR_RECV_ERR_FRAME_DATA_1_UNKNOWN_LENGTH,	// 10
	E_IR_RECV_ERR_FRAME_DATA_0_NULL,
	E_IR_RECV_ERR_FRAME_DATA_0_UNKNOWN_LENGTH,
	E_IR_RECV_ERR_BUF_OVERFLOW,
	E_IR_RECV_ERR_ILLEGAL_STAT,
	E_IR_RECV_ERR_UNKNOWN_TO,					// 15
	E_IR_RECV_ERR_SONY_FRAME,
	E_IR_RECV_ERR_SONY_FRAME_MEASURE_TO,
	E_IR_RECV_ERR_NEC_FRAME_WAIT_TO,
	E_IR_RECV_ERR_AEHA_FRAME_WAIT_TO,
	E_IR_RECV_ERR_MAX							// 20
} E_IR_RECV_ERR;

extern E_IR_RECV_STAT volatile gIr_Recv_Stat;
extern E_IR_RECV_ERR volatile gIr_Recv_Err;

#define IR_RECV_PCINT8_HDL() \
	do { \
		if( (PCMSK1 & _BV(PCINT8)) != 0 ) {	\
			Ir_Recv_Pcint8Hdl(); \
		} \
	} while( 0 )


extern VOID Ir_Recv_EventHistoryDump( VOID );
extern VOID Ir_Recv_Pcint8Hdl( VOID );
extern VOID Ir_Recv_Stop( VOID );
extern VOID Ir_Recv_Start( VOID );

#endif //__IR_RECV_H__
